{"ast":null,"code":"var _jsxFileName = \"/Users/donspire/webdev/JavaScript/contactKeeper/client/src/components/contacts/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add a contact.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } //   const compare = (a, b) => {\n  //     if (a.name < b.name) {\n  //       return -1;\n  //     }\n  //     if (a.name > b.name) {\n  //       return 1;\n  //     }\n  //     return 0;\n  //   };\n  //   compare();\n  //const sortedContacts = contacts.sort(compare);\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n      contact: contact\n    }, contact.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/donspire/webdev/JavaScript/contactKeeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","length","map","contact","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AAEA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,cAA/B;;AAEA,MAAIC,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAPoB,CASrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,QAAD;AAAA,cAQGF,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACZ,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA;AAAvC,OAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnCD;;GAAMP,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered } = contactContext;\n\n  if (contacts.length === 0) {\n    return <h4>Please add a contact.</h4>;\n  }\n\n  //   const compare = (a, b) => {\n  //     if (a.name < b.name) {\n  //       return -1;\n  //     }\n  //     if (a.name > b.name) {\n  //       return 1;\n  //     }\n  //     return 0;\n  //   };\n  //   compare();\n  //const sortedContacts = contacts.sort(compare);\n\n  return (\n    <Fragment>\n      {/* {filtered !== null\n        ? filtered.map((contact) => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))\n        : contacts.map((contact) => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))} */}\n      {contacts.map((contact) => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}