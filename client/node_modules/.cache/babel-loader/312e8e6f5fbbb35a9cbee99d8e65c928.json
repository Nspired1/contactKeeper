{"ast":null,"code":"var _jsxFileName = \"/Users/donspire/webdev/JavaScript/contactKeeper/client/src/context/contact/ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"Alessandra Ambrosio\",\n      email: \"aa@gmail.com\",\n      phone: \"415-555-1111\",\n      type: \"professional\"\n    }, {\n      id: 4,\n      name: \"Ming Xi\",\n      email: \"xi@mail.com\",\n      phone: \"650-555-4444\",\n      type: \"professional\"\n    }, {\n      id: 3,\n      name: \"Laetitia Casta\",\n      email: \"casta@yahoo.com\",\n      phone: \"925-555-3333\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"Lais Ribeiro\",\n      email: \"lais@proton.com\",\n      phone: \"510-555-2222\",\n      type: \"professional\"\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Actions=====\n  // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuidv4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["/Users/donspire/webdev/JavaScript/contactKeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuidv4","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n} from \"../types\";\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: \"Alessandra Ambrosio\",\n        email: \"aa@gmail.com\",\n        phone: \"415-555-1111\",\n        type: \"professional\",\n      },\n      {\n        id: 4,\n        name: \"Ming Xi\",\n        email: \"xi@mail.com\",\n        phone: \"650-555-4444\",\n        type: \"professional\",\n      },\n      {\n        id: 3,\n        name: \"Laetitia Casta\",\n        email: \"casta@yahoo.com\",\n        phone: \"925-555-3333\",\n        type: \"personal\",\n      },\n\n      {\n        id: 2,\n        name: \"Lais Ribeiro\",\n        email: \"lais@proton.com\",\n        phone: \"510-555-2222\",\n        type: \"professional\",\n      },\n    ],\n    current: null,\n    filtered: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Actions=====\n  // Add Contact\n  const addContact = (contact) => {\n    contact.id = uuidv4();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n  // Delete Contact\n  const deleteContact = (id) => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n  // Set Current Contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n  // Update Contact\n  const updateContact = (contact) => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n  // Filter Contact\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}