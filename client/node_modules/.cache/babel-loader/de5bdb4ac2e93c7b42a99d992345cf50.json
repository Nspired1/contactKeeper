{"ast":null,"code":"var _jsxFileName = \"/Users/donspire/webdev/JavaScript/contactKeeper/client/src/components/contacts/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered\n  } = contactContext;\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add a contact.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  const compare = (a, b) => {\n    if (a.name < b.name) {\n      return -1;\n    }\n\n    if (a.name > b.name) {\n      return 1;\n    }\n\n    return 0;\n  };\n\n  const sortedContacts = contacts.sort(compare);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: filtered !== null ? filtered.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this)) : sortedContacts.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"6ffJmqxeUUv4Q9skTZKiRD1WUuU=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/donspire/webdev/JavaScript/contactKeeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","CSSTransition","TransitionGroup","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","length","compare","a","b","name","sortedContacts","sort","map","contact","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,cAAc,GAAGN,UAAU,CAACI,cAAD,CAAjC;AAEA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,cAA/B;;AAEA,MAAIC,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,OAAO,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,QAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,aAAO,CAAC,CAAR;AACD;;AACD,QAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACnB,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GARD;;AAUA,QAAMC,cAAc,GAAGP,QAAQ,CAACQ,IAAT,CAAcL,OAAd,CAAvB;AAEA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,eAAD;AAAA,gBACGF,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACQ,GAAT,CAAcC,OAAD,iBACX,QAAC,aAAD;AAAgC,QAAA,OAAO,EAAE,GAAzC;AAA8C,QAAA,SAAS,EAAC,MAAxD;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF,SAAoBA,OAAO,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAMGJ,cAAc,CAACE,GAAf,CAAoBC,OAAD,iBACjB,QAAC,aAAD;AAAgC,QAAA,OAAO,EAAE,GAAzC;AAA8C,QAAA,SAAS,EAAC,MAAxD;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF,SAAoBA,OAAO,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AAPN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtCD;;GAAMb,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactItem from \"./ContactItem\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered } = contactContext;\n\n  if (contacts.length === 0) {\n    return <h4>Please add a contact.</h4>;\n  }\n\n  const compare = (a, b) => {\n    if (a.name < b.name) {\n      return -1;\n    }\n    if (a.name > b.name) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const sortedContacts = contacts.sort(compare);\n\n  return (\n    <Fragment>\n      <TransitionGroup>\n        {filtered !== null\n          ? filtered.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} className=\"item\">\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))\n          : sortedContacts.map((contact) => (\n              <CSSTransition key={contact.id} timeout={500} className=\"item\">\n                <ContactItem contact={contact} />\n              </CSSTransition>\n            ))}\n      </TransitionGroup>\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}